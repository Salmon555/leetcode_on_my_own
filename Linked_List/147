# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def insertionSortList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        def insert(head,val):
            if not head:
                return ListNode(val)
            if val<head.val:
                temp=ListNode(val)
                temp.next=head
                return temp
            cur=head
            while cur:
                if cur.next==None:
                    cur.next=ListNode(val)
                    return head
                if val>=cur.val and val<=cur.next.val:
                    temp=ListNode(val)
                    temp.next=cur.next
                    cur.next=temp
                    return head
                cur=cur.next
        new=[]
        while head:
            new.append(head.val)
            head=head.next
        ans=None
        for i in range(0,len(new)):
            ans=insert(ans,new[i])
        return ans
        
        
