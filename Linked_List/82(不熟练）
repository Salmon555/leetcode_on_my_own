# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if not head:
            return None
        if head.next==None:
            return head
        l1,l2=head,head
        while(l1.val==l1.next.val):
            l1=l1.next
            if l1.next==None:
                return None
            head=l1.next
            if head.next!=None and head.val==head.next.val:
                l1=head
        if not head:
            return None
        l1=head
        while(l1.next!=None):
            l2=l1.next
            if l2.next==None:
                break
            elif l2.val!=l2.next.val:
                l1=l2
                continue
            else:
                while(l2.val==l2.next.val):
                    l2=l2.next
                    if l2.next==None:
                        break
                if l2.next==None:
                    l1.next=None
                    return head
                l1.next=l2.next
                continue
        return head
            
        
        
