# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        if not head:
            return head
        
        length=0
        cur=head
        while cur:
            length+=1
            cur=cur.next
        k=k%length
        if k==0:
            return head
        cur=head
        for i in range(0,length-k-1):
            cur=cur.next
        ans=cur.next
        cur.next=None
        cur=ans
        while cur.next:
            cur=cur.next
        cur.next=head
        return ans
            
        
