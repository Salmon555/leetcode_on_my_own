class Solution:
    def maxProfit(self, prices: List[int], fee: int) -> int:
        n=len(prices)
        left_min,sell_day,ans=[],[0]*n,[0]*n
        temp_min=prices[0]
        for i in prices:
            if i<temp_min:
                temp_min=i
            left_min.append(temp_min)
        for i in range(1,n):
            if prices[i]-left_min[i-1]>fee:
                ans[i]=prices[i]-left_min[i-1]-fee
                sell_day[i]=i
        for i in range(1,n):
            if sell_day[i-1]!=0:
                sell_day[i]=sell_day[i-1]
                ans[i]=max(ans[i-1],ans[i])
                if prices[i]>prices[sell_day[i-1]]:
                    ans[i]=ans[i-1]+prices[i]-prices[sell_day[i-1]]
                    sell_day[i]=i
                if sell_day[i-1]<i-1:
                    if ans[sell_day[i-1]]+prices[i]-min(prices[sell_day[i-1]+1:i])-fee>ans[i]:
                        ans[i]=ans[sell_day[i-1]]+prices[i]-min(prices[sell_day[i-1]+1:i])-fee
                        sell_day[i]=i
        return ans[n-1]
                    
                
        
